

class Solution 
{
    public:
    //Function to find minimum number of pages.
    bool findpossible(int n ,int arr[],int N,int M)
    {
        int pagecount=0;
        int c=1;
        
        if(M>N){
            
        }
        for(int i=0;i<N;i++)
        {
            if(arr[i]>n)
            {
                return false;
            }
            else if(pagecount+arr[i]>n)
            {
                pagecount=arr[i];
                c++;
                if(c>M){
                    return false;
                }
            }
            
            else{
                pagecount= pagecount+arr[i];
            }
        }
        return true;
    }
    
    int findPages(int A[], int N, int M) 
    {
       int s=0;
       int e=accumulate(A,A+N,0);
       int ans=-1;
       
       while(s<=e)
       {
           int mid = s+(e-s)/2;
           
           if(findpossible(mid,A,N,M)!=false)
           {
               ans=mid;
               e=mid-1;
           }
           else {
               s=mid+1;
           }
       }
       return ans;
    }
};

